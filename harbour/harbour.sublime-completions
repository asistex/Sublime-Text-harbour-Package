{
   "scope": "source.harbour - variable.other.harbour",
   "completions":
   [
      "Harbour",
/* A */
      { "trigger": "aadd",              "contents": "Aadd( ${1:aArray}, ${2:value} )" },
      { "trigger": "abs",               "contents": "Abs( ${1:number} )" },
      { "trigger": "achoice",           "contents": "Achoice( ${1:nTop}, ${2:nLeft}, ${3:nBottom}, ${4:nRight}, ${5:acMenuItems}, ${6:[alSelectableItems>/<lSelectableItems]}, ${7:[cUserFunction>/<bUserBlock]}, ${8:[nInitialItem]}, ${9:[nInitialItem]}, ${[10:nWindowRow]} )" },
      { "trigger": "aclone",            "contents": "Aclone( ${1:aSource} )" },
      { "trigger": "acopy",             "contents": "Acopy( ${1:aSource}, ${2:aTarget}, ${2:aTarget}, ${3:[nStart]}, ${4:[nCount]}, ${5:[nTagetPos]} )" },
      { "trigger": "adays",             "contents": "ADays()" },
      { "trigger": "adel",              "contents": "Adel( ${1:aArray}, ${2:nPos} )" },
      { "trigger": "adir",              "contents": "Adir( ${1:cFileSpecMask}, ${2:aFilenames}, ${3:aSizes}, ${4:aDates}, ${5:aTimes}, ${6:aAttr} )" },
      { "trigger": "addmonth",          "contents": "AddMonth( ${1:[dDate]}, ${2:nMonths} )" }, 
      { "trigger": "aeval",             "contents": "Aeval( ${1:aArray}, ${2:bBlock}, ${3:[nStart]}, ${4:[nCount]} )" },
      { "trigger": "afields",           "contents": "Afields( ${1:aFieldsnames}, ${2:[aTypes]}, ${3:[aWidths]}, ${4:[aDecimals]}, ${5:[aFlags]} )" },
      { "trigger": "afill",             "contents": "Afill( ${1:aArray}, ${2:xValue}, ${3:[nStart]}, ${4:[nCount]} )" },
      { "trigger": "ains",              "contents": "Ains( ${1:aArray}, ${2:nPos} )" },
      { "trigger": "alert",             "contents": "Alert( ${1:message}, ${2:[aOptions]} )" },
      { "trigger": "alias",             "contents": "Alias( ${1:nWorkArea} )" },
      { "trigger": "alltrim",           "contents": "AllTrim( ${1:cString} )" },
      { "trigger": "altd",              "contents": "AltD( ${1:[nAction]} )" },
      { "trigger": "amonths",           "contents": "AMonths()" },
      { "trigger": "ampm",              "contents": "AMPM( ${1:[cTime]} )" },
      { "trigger": "array",             "contents": "Array( ${1:nDim1number}, ${2:[nDimN ...]} )" },
      { "trigger": "asc",               "contents": "Asc( ${1:cCharacter} )" },
      { "trigger": "ascpos",            "contents": "AscPos( ${1:cCharacter},${2:[nPos]} )" },
      { "trigger": "ascan",             "contents": "Ascan( ${1:aArray}, ${2:expSearch}, ${3:[nStart]}, ${4:[nCount]} )" },
      { "trigger": "asin",              "contents": "Asin( ${1:nRadians} )" },
      { "trigger": "asize",             "contents": "Asize( ${1:aArray}, ${2:nLen} )" },
      { "trigger": "asizealloc",        "contents": "AsizeAlloc( ${1:aArray}, ${2:nCount} )" },
      { "trigger": "asort",             "contents": "Asort( ${1:aArray}, ${2:[nStart]}, ${3:[nCount]}, ${4:[bBlock]} )" },
      { "trigger": "at",                "contents": "At( ${1:cSearch}, ${2:cIntoString} )" },
      { "trigger": "atail",             "contents": "Atail( ${1:aArray} )" },
      { "trigger": "atan",              "contents": "Atan( ${1:nRadians} )" },
      { "trigger": "atn2",              "contents": "Atn2( ${1:nSine}, ${2:nCosine} )" },
      { "trigger": "atnum",             "contents": "AtNum( ${1:cSearch}, ${2:cString}, ${3:[nCount]}, ${4:[nSkipChars]} )" },
      { "trigger": "addascii",          "contents": "AddAscii( ${1:cString}, ${2:nValue}, ${3:[nPos]} )" },
/* B */
      { "trigger": "bin2i",             "contents": "Bin2I( ${1:cSignedInt} )" },
      { "trigger": "bin2l",             "contents": "Bin2L( ${1:c32bitSignedLongInteger} )" },
      { "trigger": "bin2u",             "contents": "Bin2U( ${1:c32bitUnsignedLongInteger} )" },
      { "trigger": "bin2w",             "contents": "Bin2W( ${1:cUnsignedInt} )" },
      { "trigger": "bof",               "contents": "Bof()" },
      { "trigger": "bom",               "contents": "BoM( ${1:dDate} )" },
      { "trigger": "boy",               "contents": "BoY( ${1:dDate} )" },
      { "trigger": "break",             "contents": "Break( ${1:cExpr} )" },
      { "trigger": "browse",            "contents": "Browse( ${1:[nTop]}, ${2:[nLeft]}, ${3:[nBottom]}, ${4:[nRight]} )" },
/* C */
      { "trigger": "cdow",              "contents": "CDow( ${1:dDate} )" },
      { "trigger": "chr",               "contents": "Chr( ${1:nAsciiCode} )" },
      { "trigger": "clipinit",          "contents": "Clipinit()" },
      { "trigger": "cmonth",            "contents": "CMonth( ${1:dDate} )" },
      { "trigger": "col",               "contents": "Col()" },
      { "trigger": "colorselect",       "contents": "ColorSelect( ${1:nColorIndex} )" },
      { "trigger": "ctod",              "contents": "CToD( ${1:cDateString} )" },
      { "trigger": "ctodow",            "contents": "CToDoW( ${1:cName} )" },
      { "trigger": "ctomonth",          "contents": "CToMonth( ${1:cName} )" },
      { "trigger": "copy",              "contents": "Copy( ${1:source}, ${2:dest} )" },
      { "trigger": "cos",               "contents": "Cos( ${1:arg} )" },
      { "trigger": "count",             "contents": "Count()" },
      { "trigger": "curdir",            "contents": "CurDir( ${1:cDrive} )" },
      { "trigger": "crearlog",          "contents": "CrearLog( ${1:cFile}, ${2:cLineaTxt} )" },
/* D */
      { "trigger": "date",              "contents": "Date()" },
      { "trigger": "day",               "contents": "Day( ${1:cDate} )" },
      { "trigger": "days",              "contents": "Days( ${1:nSecs} )" },
      { "trigger": "daysinmonth",       "contents": "DaysInMonth( ${1:nMonth}, ${2:lLeapYear} )" },
      { "trigger": "daystomonth",       "contents": "DaysToMonth( ${1:nMonth}, ${2lLeapYear} )" },
      { "trigger": "dbf",               "contents": "Dbf()" },
      { "trigger": "dbappend",          "contents": "dbAppend( ${1:[lUnLockAll]} )" },
      { "trigger": "dbclearfilter",     "contents": "dbClearFilter()" },
      { "trigger": "dbclearindex",      "contents": "dbClearIndex()" },
      { "trigger": "dbclearrelation",   "contents": "dbClearRelation()" },
      { "trigger": "dbcloseall",        "contents": "dbCloseAll()" },
      { "trigger": "dbclosearea",       "contents": "dbCloseArea()" },
      { "trigger": "dbcommit",          "contents": "dbCommit()" },
      { "trigger": "dbcommitall",       "contents": "dbCommitAll()" },
      { "trigger": "dbcreate",          "contents": "dbCreate( ${1:cFile}, ${2:aStruct}, ${3:[cRDD]}, ${4:[lKeepOpen]}, ${5:[cAlias]}, ${6:[cDelimArg]}, ${7:[cCodePage]}, ${8:[nConnection]} )" },
      { "trigger": "dbcreateindex",     "contents": "dbCreateIndex( ${1:cIndexName}, ${2:cKeyExpr}, ${3:bKeyExpr}, ${4:[lUnique]} )" },
      { "trigger": "dbdelete",          "contents": "dbDelete()" },
      { "trigger": "dbdrop",            "contents": "hb_dbDrop( ${1:cDbf}, ${2:[cIndex]}, ${3:[cRDD]}, ${4:[nConnection]} )" },
      { "trigger": "dbedit",            "contents": "dbEdit( ${1:[nTop]}, ${2:[nLeft]}, ${3:[nBottom]}, ${4:[nRight]}, ${5:[acColumns]}, ${6:[cUserFunction]}, ${7:[acColumnSayPictures | cColumnSayPicture]}, ${8:[acColumnHeaders | cColumnHeader]}, ${9:[acHeadingSeparators | cHeadingSeparator]}, ${10:[acColumnSeparators | cColumnSeparator]}, ${11:[acFootingSeparators | cFootingSeperator]}, ${12:[acColumnFootings | cColumnFooting]} )" },
      { "trigger": "dbeval",            "contents": "dbEval( ${1:bBlock}, ${2:[bForCondition]}, ${3:[bWhileCondition]}, ${4:[nNextRecords]}, ${5:[nRecord]}, ${6:[lRest]} )" },
      { "trigger": "dbexists",          "contents": "hb_dbExists( ${1:cDbf}, ${2:[cIndex]}, ${3:[cRDD]}, ${4:[nConnection]} )" },
      { "trigger": "dbfieldinfo",       "contents": "dbFieldInfo( ${1:nInfoType}, ${2:nFieldPos} )" },
      { "trigger": "dbfileget",         "contents": "dbFileGet( ${1:nFieldPos}, ${2:cTargetFile}, ${3:nMode} )" },
      { "trigger": "dbfileput",         "contents": "dbFilePut( ${1:nFieldPos}, ${2:cSourceFile} )" },
      { "trigger": "dbfilter",          "contents": "dbFilter()" },
      { "trigger": "dbfsize",           "contents": "DbfSize()" },
      { "trigger": "dbgobottom",        "contents": "dbGoBottom()" },
      { "trigger": "dbgoto",            "contents": "dbGoTo( ${1:nRecno} )" },
      { "trigger": "dbgotop",           "contents": "dbGoTop()" },
      { "trigger": "dbinfo",            "contents": "dbInfo( ${1:nInfoType}, ${2:[expNewSetting]} )" },
      { "trigger": "dborderinfo",       "contents": "dbOrderInfo( ${1:nInfoType}, ${2:[cIndexFile]}, ${3:[cOrder | nPosition]}, ${4:[expNewSetting]} )" },
      { "trigger": "dbrecall",          "contents": "dbRecall()" },
      { "trigger": "dbrecordinfo",      "contents": "dbRecordInfo( ${1:nInfoType}, ${2:[nRecord]}, ${3:[expNewSetting]} )" },
      { "trigger": "dbreindex",         "contents": "dbReindex()" },
      { "trigger": "dbrelation",        "contents": "dbRelation( ${1:nRelation} )" },
      { "trigger": "dbrename",          "contents": "dbRename( ${1:cDbf}, ${2:cIndex}, ${3:cNewName}, ${4:[cRDD]}, ${5:[nConnection]} )" },
      { "trigger": "dbrlock",           "contents": "dbRlock( ${1:[nRecord]} )" },
      { "trigger": "dbrlocklist",       "contents": "dbRLockList()" },
      { "trigger": "dbrselect",         "contents": "dbRSelect( ${1:nRelation]} )" },
      { "trigger": "dbrunlock",         "contents": "dbRUnlock( ${1:[nRecno]} )" },
      { "trigger": "dbrunlock",         "contents": "dbRunLock()" },
      { "trigger": "dbseek",            "contents": "dbSeek( ${1:expKey}, ${2:[lSoftSeek]}, ${3:[lFindLast]} )" },
      { "trigger": "dbselectarea",      "contents": "dbSelectArea( ${1:nArea | cAlias} )" },
      { "trigger": "dbsetdriver",       "contents": "dbSetDriver( ${1:[cRddName]} )" },
      { "trigger": "dbsetfilter",       "contents": "dbSetFilter( ${1:[bCondition]}, ${2:[cCondition]} )" },
      { "trigger": "dbsetindex",        "contents": "dbSetIndex( ${1:cIndexName} )" },
      { "trigger": "dbsetorder",        "contents": "dbSetOrder( ${1:nOrdernum} )" },
      { "trigger": "dbsetrelation",     "contents": "dbSetRelation( ${1:nArea | cAlias}, ${2:bRelation}, ${3:cRelation}, ${4:[lScoped]} )" },
      { "trigger": "dbskip",            "contents": "dbSkip( ${1:nRecords} )" },
      { "trigger": "dbstruct",          "contents": "dbStruct()" },
      { "trigger": "dbtableext",        "contents": "dbTableExt()" },
      { "trigger": "dbunlock",          "contents": "dbUnlock()" },
      { "trigger": "dbunlockall",       "contents": "dbUnlockall()" },
      { "trigger": "dbusearea",         "contents": "dbUsearea( ${1:[lNewArea]}, ${2:[cRddName]}, ${3:cDatabaseName}, ${4:[cAlias]}, ${5:[lShared]}, ${6:[lReadonly]}, ${7:[cCodePage]}, ${8:[nConnection]} )" },
      { "trigger": "defpath",           "contents": "DefPath()" },
      { "trigger": "deleted",           "contents": "Deleted()" },
      { "trigger": "deletefile",        "contents": "DeleteFile( ${1:cFileName]} )" },
      { "trigger": "descend",           "contents": "Descend( ${1:xExp} )" },
      { "trigger": "devout",            "contents": "DevOut( ${1:exp}, ${2:[cColorString]} )" },
      { "trigger": "devoutpict",        "contents": "DevOutPict( ${1:exp}, ${2:cPicture}, ${3:[cColorString]} )" },
      { "trigger": "devpos",            "contents": "DevPos( ${1:nRow}, ${2:nCol} )" },
      { "trigger": "dirchange",         "contents": "DirChange( ${1:cDirectory} )" },
      { "trigger": "directory",         "contents": "Directory( ${1:cDirSpec}, ${2:[cAttributes]} )" },
      { "trigger": "dirremove",         "contents": "DirRemove( ${1:cDirName} )" },
      { "trigger": "diskchange",        "contents": "DiskChange( ${1:cDrive} )" },
      { "trigger": "diskname",          "contents": "DiskName()" },
      { "trigger": "diskspace",         "contents": "DiskSpace( ${1:[nDrive]} )" },
      { "trigger": "dispbegin",         "contents": "DispBegin()" },
      { "trigger": "dispbox",           "contents": "DispBox( ${1:nTop}, ${2:nLeft}, ${3:nBottom}, ${4:nRight}, ${5:[cnBoxString]}, ${6:[cColorString]} )" },
      { "trigger": "dispcount",         "contents": "DispCount()" },
      { "trigger": "dispend",           "contents": "DispEnd()" },
      { "trigger": "dispout",           "contents": "DispOut( ${1:exp}, ${2:[cColorString]} )" },
      { "trigger": "dispoutat",         "contents": "DispOutAt( ${1:nRow}, ${2:nCol}, ${3:expression}, ${4:[cColor]} )" },
      { "trigger": "dmy",               "contents": "DMY( ${1:[dDate]}, ${2:[lMode]} )" },
      { "trigger": "do",                "contents": "do( ${1:xFuncProc}, ${2:[xArguments]} )" },
      { "trigger": "doserror",          "contents": "DOSError( ${1:[nNewOsCode]} )" },
      { "trigger": "dow",               "contents": "Dow( ${1:dDate} )" },
      { "trigger": "doy",               "contents": "DoY( ${1:[dDate]} )" },
      { "trigger": "dtoc",              "contents": "DtoC( ${1:dDate} )" },
      { "trigger": "dtos",              "contents": "DtoS( ${1:dDate} )" },
/* E */
      { "trigger": "elaptime",          "contents": "ElapTime( ${1:cStartTime}, ${2:cEndTime} )" },
      { "trigger": "empty",             "contents": "Empty( ${1:xExpr} )" },
      { "trigger": "eof",               "contents": "Eof()" },
      { "trigger": "eom",               "contents": "EoM( ${1:[dDate]} )" },
      { "trigger": "eoy",               "contents": "EoY( ${1:[dDate]} )" },
      { "trigger": "errorsys",          "contents": "Errorsys()" },
      { "trigger": "errorlevel",        "contents": "ErrorLevel( ${1:[nNewReturnCode]} )" },
      { "trigger": "errorblock",        "contents": "ErrorBlock( ${1:[bErrorHandler]} )" },
      { "trigger": "eval",              "contents": "Eval( ${1:bBlock}, ${2:[BlockArg list]} )" },
      { "trigger": "exp",               "contents": "Exp( ${1:nExponent} )" },
      { "trigger": "esfiletipo",        "contents": "EsFileTipo( ${1:cFile}, ${2:cControl} )" },
/* F */
      { "trigger": "fcount",            "contents": "Fcount()" },
      { "trigger": "fcreate",           "contents": "FCreate( ${1:cFile}, ${2:[nAttribute]} )" },
      { "trigger": "fieldblock",        "contents": "FieldBlock( ${1:cFieldName} )" },
      { "trigger": "fielddec",          "contents": "FieldDec()" },
      { "trigger": "fieldget",          "contents": "FieldGet( ${1:nField} )" },
      { "trigger": "fieldlen",          "contents": "FieldLen()" },
      { "trigger": "fieldname",         "contents": "FieldName( ${1:nPosition} )" },
      { "trigger": "fieldpos",          "contents": "FieldPos( ${1:cFieldName} )" },
      { "trigger": "fieldput",          "contents": "FieldPut( ${1:nField}, ${2:expAssign} )" },
      { "trigger": "fieldtype",         "contents": "hb_FieldType( ${1:cFieldName | nFieldPos} )" },
      { "trigger": "fieldwblock",       "contents": "FieldwBlock( ${1:cFieldName}, ${2:nWorkArea} )" },
      { "trigger": "file",              "contents": "File( ${1:cFile} )" },
      { "trigger": "found",             "contents": "Found()" },
      { "trigger": "fclose",            "contents": "FClose( ${1:nHandle} )" },
      { "trigger": "ferase",            "contents": "FErase( ${1:cFile} )" },
      { "trigger": "ferror",            "contents": "FError()" },
      { "trigger": "flock",             "contents": "FLock()" },
      { "trigger": "fopen",             "contents": "FOpen( ${1:cFile}, ${2:[nMode]} )" },
      { "trigger": "fread",             "contents": "FRead( ${1:nHandle}, ${2:@cBuffer}, ${3:nBytes} )" },
      { "trigger": "freadstr",          "contents": "FReadStr( ${1:nHandle}, ${2:nBytes} )" },
      { "trigger": "frename",           "contents": "FRename( ${1:cOldFile}, ${2:cNewFile} )" },
      { "trigger": "fseek",             "contents": "FSeek( ${1:nHandle}, ${2:nOffset}, ${3:[nOrigin]} )" },
      { "trigger": "fwrite",            "contents": "FWrite( ${1:nHandle}, ${2:cBuffer}, ${3:[nBytes]} )" },

/* G */
      { "trigger": "getenv",            "contents": "hb_GetEnv( ${1:cEnvVar}, ${2:[cDefaultValue]} )" },
      { "trigger": "gete",              "contents": "hb_GetEnv( ${1:cEnvVar}, ${2:[cDefaultValue]} )" },
/* H */
      { "trigger": "hardcr",            "contents": "HardCR( ${1:cString} )" },
      { "trigger": "header",            "contents": "Header()" },
      { "trigger": "hb_acmdline",       "contents": "hb_aCmdLine()" },
      { "trigger": "hb_adel",           "contents": "hb_aDel( ${1:aArray}, ${2:nPos}, ${3:[lAutosize]} )" },
      { "trigger": "hb_adler32",        "contents": "hb_Adler32( ${1:cValue}, ${2:[nStart]} )" },
      { "trigger": "hb_ains",           "contents": "hb_aIns( ${1:aArray}, ${2:[nPos]}, ${3:[uValue]}, ${4:[lAutosize]} )" },
      { "trigger": "hb_alert",          "contents": "hb_Alert( ${1:xMessage}, ${2:aOptions}, ${3:[cColorNorm]}, ${4:[nDelay]} )" },
      { "trigger": "hb_aparams",        "contents": "hb_aParams( ${1:[nUpLevel]} )" },
      { "trigger": "hb_argc",           "contents": "hb_Argc()" },
      { "trigger": "hb_argcheck",       "contents": "hb_ArgCheck( ${1:cArg} )" },
      { "trigger": "hb_argshift",       "contents": "hb_ArgShift( ${1:lShift} )" },
      { "trigger": "hb_argstring",      "contents": "hb_ArgString( ${1:cArg} )" },
      { "trigger": "hb_argv",           "contents": "hb_Argv( ${1:[nArg]} )" },
      { "trigger": "hb_arraytoparams",  "contents": "hb_ArrayToParams( ${1:aValue} )" },
      { "trigger": "hb_ascan",          "contents": "hb_Ascan( ${1:aArray}, ${2:uValue}, ${3:[nStart]}, ${4:[nCount]}, ${5:[lExact]} )" },
      { "trigger": "hb_at",             "contents": "hb_At( ${1:cSearchFor}, ${2:cIntoString}, ${3:[nStart]}, ${4:[nEnd]}  )" },
      { "trigger": "hb_ati",            "contents": "hb_Ati( ${1:cSearch}, ${2:[nStart]}, ${3:[nEnd]} )" },
      { "trigger": "hb_atokens",        "contents": "hb_aTokens( ${1:cString}, ${2:[cDelimiter | cEOL]}, ${3:[lSkipStrings]}, ${4:[lDoubleQuoteOnly]} )" },

      { "trigger": "hb_base64decode",   "contents": "hb_Base64Decode( ${1:cBase64Encoded} )" },
      { "trigger": "hb_base64encode",   "contents": "hb_Base64Encode( ${1:cData}, ${2:[nLineLength]} )" },
      { "trigger": "hb_bat",            "contents": "hb_BAt( ${1:cSubString}, ${2:cString}, ${3:[nFrom]}, ${4:[nTo]} )" },
      { "trigger": "hb_bchar",          "contents": "hb_BChar( ${1:nCode} )" },
      { "trigger": "hb_bcode",          "contents": "hb_BCode( ${1:cText} )" },
      { "trigger": "hb_bitand",         "contents": "hb_BitAnd( ${1:nVal1}, ${2:nVal2}, ${3:[nVal3,...]} )" },
      { "trigger": "hb_bitnot",         "contents": "hb_BitNot( ${1:nVal} )" },
      { "trigger": "hb_bitor",          "contents": "hb_BitOr( ${1:nVal1}, ${2:nVal2}, ${3:[nVal3,...]} )" },
      { "trigger": "hb_bitreset",       "contents": "hb_BitReset( ${1:nVal}, ${2:nBit} )" },
      { "trigger": "hb_bitset",         "contents": "hb_BitSet( ${1:nVal}, ${2:nBit} )" },
      { "trigger": "hb_bitshift",       "contents": "hb_BitShift( ${1:nVal}, ${2:nBits} )" },
      { "trigger": "hb_bittest",        "contents": "hb_BitTest( ${1:nVal}, ${2:nBit} )" },
      { "trigger": "hb_bitxor",         "contents": "hb_BitXor( ${1:nVal1}, ${2:nVal2}, ${3:[nVal3, ...]} )" },
      { "trigger": "hb_bleft",          "contents": "hb_BLeft( ${1:cString}, ${2:nCount} )" },
      { "trigger": "hb_blen",           "contents": "hb_BLen( ${1:cText} )" },
      { "trigger": "hb_bpadc",          "contents": "hb_BPadC( ${1:exp}, ${2:nLength}, ${3:[cFillChar]} )" },
      { "trigger": "hb_bpadl",          "contents": "hb_BPadL( ${1:exp}, ${2:nLength}, ${3:[cFillChar]} )" },
      { "trigger": "hb_bpadr",          "contents": "hb_BPadR( ${1:exp}, ${2:nLength}, ${3:[cFillChar]} )" },
      { "trigger": "hb_bpeek",          "contents": "hb_BPeek( ${1:cText}, ${2:n} )" },
      { "trigger": "hb_bpoke",          "contents": "hb_BPoke( ${1:[@]cText}, ${2:n}, ${3:nVal} )" },
      { "trigger": "hb_brat",           "contents": "hb_BRAt( ${1:cSubString}, ${2:[nFrom]}, ${3:[nTo]} )" },
      { "trigger": "hb_bright",         "contents": "hb_BRight( ${1:cString}, ${2:nCount} )" },
      { "trigger": "hb_bstuff",         "contents": "hb_BStuff( ${1:cString}, ${2:nAt}, ${3:nDel}, ${4:cIns} )" },
      { "trigger": "hb_bsubstr",        "contents": "hb_BSubStr( ${1:cString}, ${2:nStart}, ${3:nCount} )" },
      { "trigger": "hb_builddate",      "contents": "hb_BuildDate()" },
      { "trigger": "hb_byteswapi",      "contents": "hb_ByteSwapI( ${1:}, ${2:nValue} )" },
      { "trigger": "hb_byteswapl",      "contents": "hb_ByteSwapL( ${1:}, ${2:nValue} )" },
      { "trigger": "hb_byteswapll",     "contents": "hb_ByteSwapLL( ${1:}, ${2:nValue} )" },
      { "trigger": "hb_byteswapu",      "contents": "hb_ByteSwapU( ${1:}, ${2:nValue} )" },
      { "trigger": "hb_byteswapw",      "contents": "hb_ByteSwapW( ${1:}, ${2:nValue} )" },

      { "trigger": "hb_blowfishdecrypt",     "contents": "hb_BlowfishDecrypt( ${1:cBfKey}, ${2:cCipher}, ${3:[lRaw]} )" },
      { "trigger": "hb_blowfishdecrypt_cfb", "contents": "hb_BlowfishDecrypt_CFB( ${1:cBfKey}, ${2:cCipher}, ${3:[cInitSeed]} )" },
      { "trigger": "hb_blowfishencrypt",     "contents": "hb_BlowfishEncrypt( ${1:cBfKey}, ${2:cText}, ${3:[lRaw]} )" },
      { "trigger": "hb_blowfishencrypt_cfb", "contents": "hb_BlowfishEncrypt_CFB( ${1:cBfKey}, ${2:cText}, ${3:[cInitSeed]} )" },
      { "trigger": "hb_blowfishkey",         "contents": "hb_BlowfishKey( ${1:cPasswd} )" },

      { "trigger": "hb_cday",           "contents": "hb_CDay( ${1:nDay} )" },
      { "trigger": "hb_cdpcharmax",     "contents": "hb_CdpCharMax( ${1:[cCPID]} )" },
      { "trigger": "hb_cdpexists",      "contents": "hb_CdpExists( ${1:cCPID} )" },
      { "trigger": "hb_cdpinfo",        "contents": "hb_CdpInfo( ${1:[cCPID]} )" },
      { "trigger": "hb_cdpischaridx",   "contents": "hb_CdpIsCharIdx( ${[1:cCdpID]}, ${2:[lNewMode]} )" },
      { "trigger": "hb_cdpisutf8",      "contents": "hb_CdpIsUTF8( ${1:[cCPID]} )" },
      { "trigger": "hb_cdplist",        "contents": "hb_CdpList()" },
      { "trigger": "hb_cdpos",          "contents": "hb_CdpOS()" },
      { "trigger": "hb_cdpselect",      "contents": "hb_CdpSelect( ${1:[cNewCPID]} )" },
      { "trigger": "hb_cdpterm",        "contents": "hb_CdpTerm()" },
      { "trigger": "hb_cdpuniid",       "contents": "hb_CdpUniID( ${1:[cCPID]} )" },
      { "trigger": "hb_clocks2secs",    "contents": "hb_Clocks2Secs( ${1:nClocks} )" },
      { "trigger": "hb_cmdline",        "contents": "hb_CmdLine()" },
      { "trigger": "hb_compile",        "contents": "hb_Compile( ${1:cFileName}, ${2:[...]} )" },
      { "trigger": "hb_compilebuf",     "contents": "hb_CompileBuf( ${1:cFileName}, ${2:[cSwitches ...]} )" },
      { "trigger": "hb_compilefrombuff","contents": "hb_CompileFromBuff( ${1:cHrbCode}, ${2:'harbour'}, ${3:[cSwitches ...]} )" },
      { "trigger": "hb_compiler",       "contents": "hb_Compiler()" },
      { "trigger": "hb_crc",            "contents": "hb_CRC( ${1:[cValue}, ${2:[nStart]}, ${3:[nPolynomial]} )" },
      { "trigger": "hb_crc16",          "contents": "hb_CRC16( ${1:cValue}, ${2:[nStart]} )" },
      { "trigger": "hb_crc32",          "contents": "hb_CRC32( ${1:cValue}, ${2:[nStart]} )" },
      { "trigger": "hb_crcct",          "contents": "hb_CRCCT( ${1:cValue}, ${2:[nStart]}, ${3:[nPolynomial]} )" },
      { "trigger": "hb_cstr",           "contents": "hb_CStr( ${1:xVal} )" },
      { "trigger": "hb_ctod",           "contents": "hb_CtoD( ${1:cDate}, ${2:[cDateFormat]} )" },
      { "trigger": "hb_ctot",           "contents": "hb_CtoT( ${1:cTimeStamp}, ${2:[cDateFormat]}, ${3:[cTimeFormat]} )" },
      { "trigger": "hb_curdrive",       "contents": "hb_CurDrive( ${1:[cNewDrive]} )" },
      { "trigger": "hb_cwd",            "contents": "hb_CWD( ${1:[cNewDir]} )" },

      { "trigger": "hb_date",           "contents": "hb_Date( ${1:[nYear}, ${2:nMonth}, ${3:nDay]} )" },
      { "trigger": "hb_datetime",       "contents": "hb_DateTime( ${1:[nYear}, ${2:nMonth}, ${3:nDay},${4:nHour}, ${5:nMinute}, ${6:nSecond}, ${7:nFragment]} )" },
      { "trigger": "hb_dbcreatetemp",   "contents": "hb_dbCreateTemp( ${1:cAlias}, ${2:aStruct}, ${3:cRDD}, ${4:cCodePage}, ${5:nConnection} )" },
      { "trigger": "hb_dbdetach",       "contents": "hb_dbDetach( ${1:[nWorkArea]}, ${2:[xCargo]} )" },
      { "trigger": "hb_dbdrop",         "contents": "hb_dbDrop( ${1:cDbf}, ${2:[cIndex]}, ${3:[cRDD]}, ${4:[nConnection]} )" },
      { "trigger": "hb_dbexists",       "contents": "hb_dbExists( ${1:cDbf}, ${2:[cIndex]}, ${3:[cRDD]}, ${4:[nConnection]} )" },
      { "trigger": "hb_dbgetfilter",    "contents": "hb_dbGetFilter()" },
      { "trigger": "hb_dbpack",         "contents": "hb_dbPack( ${1:[bBlock]}, ${2:[nEvery]} )" },
      { "trigger": "hb_dbrequest",      "contents": "hb_dbRequest( ${1:[cAlias]}, ${2:[lFreeArea]}, ${3:[@xCargo]}, ${4:[lWait]} )" },
      { "trigger": "hb_dbzap",          "contents": "hb_dbZap()" },
      { "trigger": "hb_default",        "contents": "hb_Default( @${1:xVar}, ${2:xValue} )" },
      { "trigger": "hb_defaultvalue",   "contents": "hb_DefaultValue( ${1:xValue}, ${2:xDefaultValue} )" },
      { "trigger": "hb_deserialize",    "contents": "hb_Deserialize( ${1:cSerialized}, ${2:[cCdpIN]}, ${3:[cCdpOUT]} )" },
      { "trigger": "hb_dirbase",        "contents": "hb_DirBase()" },
      { "trigger": "hb_dirbuild",       "contents": "hb_DirBuild( ${1:cDir} )" },
      { "trigger": "hb_dircreate",      "contents": "hb_DirCreate( ${1:cDir} )" },
      { "trigger": "hb_dirdelete",      "contents": "hb_DirDelete( ${1:cDir} )" },
      { "trigger": "hb_directory",      "contents": "hb_Directory( ${1:cDirSpec}, ${2:[cAttributes]} )" },
      { "trigger": "hb_direxist",       "contents": "hb_DirExists( ${1:cDir} )" },
      { "trigger": "hb_dirremoveall",   "contents": "hb_DirRemoveAll( ${1:cDir} )" },
      { "trigger": "hb_dirscan",        "contents": "hb_DirScan( ${1:cPath}, ${2:[cFileMask]}, ${3:[cAttr]} )" },
      { "trigger": "hb_dirsepadd",      "contents": "hb_DirSepAdd( ${1:cDir} )" },
      { "trigger": "hb_dirsepdel",      "contents": "hb_DirSepDel( ${1:cDir} )" },
      { "trigger": "hb_dirseptoos",     "contents": "hb_DirSepToOS( ${1:cDir} )" },
      { "trigger": "hb_dirtemp",        "contents": "hb_DirTemp( ${1:cDir} )" },
      { "trigger": "hb_dirunbuild",     "contents": "hb_DirUnBuild( ${1:cDir} )" },
      { "trigger": "hb_diskspace",      "contents": "hb_DiskSpace( ${1:[cDrive]}, ${2:[nType]} )" },
      { "trigger": "hb_dispbox",        "contents": "hb_DispBox( ${1:nTop}, ${2:}nLeft, ${3:nBottom}, ${4:nRight}, ${5:[cBoxChars]}, ${6:[cnColor]} )" },
      { "trigger": "hb_dispoutat",      "contents": "hb_DispOutAt( ${1:nRow}, ${2:nCol}, ${3:expression}, ${4:[cColor]} )" },
      { "trigger": "hb_dispoutatbox",   "contents": "hb_DispOutAtBox( ${1:nRow}, ${2:nCol}, ${3:expression}, ${4:[cColor]} )" },
      { "trigger": "hb_dtoc",           "contents": "hb_DtoC( ${1:dDate | tTimeStamp}, ${2:[cDateFormat]} )" },
      { "trigger": "hb_dtot",           "contents": "hb_DtoT( ${1:dDate}, ${2:[cnTime]} )" },

      { "trigger": "hb_eol",            "contents": "hb_Eol()" },
      { "trigger": "hb_ExecFromArray",  "contents": "hb_ExecFromArray( ${1:cFuncName | sFuncSymbol | bCodeBlock}, ${2:[aParams]} )" },
      { "trigger": "hb_EndObject",      "contents": "hb_EndObject()" },
      { "trigger": "hb_ExecMsg",        "contents": "hb_ExecMsg( ${1:sFuncSym}, ${2:object}, ${3:[params ...]} )" },

      { "trigger": "hb_hextonum",       "contents": "HexToNum( ${1:cHexNumber} )" },
      { "trigger": "hb_hextostr",       "contents": "hb_HexToStr( ${1:cHexValues} )" },
      { "trigger": "hb_hour",           "contents": "hb_Hour( ${1:tTimeStamp} )" },
      { "trigger": "hb_hallocate",      "contents": "hb_hAllocate( ${1:hHash}, ${2:nElements} )" },
      { "trigger": "hb_hash",           "contents": "hb_Hash()" },
      { "trigger": "hb_hautoadd",       "contents": "hb_hAutoAdd( ${1:hHash}, ${2:[lFlag]} )" },
      { "trigger": "hb_hbinary",        "contents": "hb_hBinary( ${1:hHash}, ${2:[lFlag]} )" },
      { "trigger": "hb_hcasematch",     "contents": "hb_hCaseMatch( ${1:hHash}, ${2:[lFlag]} )" },
      { "trigger": "hb_hclear",         "contents": "hb_hClear( ${1:hHash} )" },
      { "trigger": "hb_hclone",         "contents": "hb_hClone( ${1:hHash} )" },
      { "trigger": "hb_hcopy",          "contents": "hb_hCopy( ${1:hsDestination}, ${2:hsSource}, ${3:[nStart]}, ${4:[nCount]} )" },
      { "trigger": "hb_hdefault",       "contents": "hb_hDefault( ${1:hHash}, ${2:DefValue} )" },
      { "trigger": "hb_hdel",           "contents": "hb_hDel( ${1:hHash}, ${2:Key} )" },
      { "trigger": "hb_hdelat",         "contents": "hb_hDelAt( ${1:hHash}, ${2:nPos} )" },
      { "trigger": "hb_heval",          "contents": "hb_hEval( ${1:hHash}, ${2:bBlock}, ${3:[nStart]}, ${4:[nCount]} )" },
      { "trigger": "hb_hfill",          "contents": "hb_hFill( ${1:hHash}, ${2:Value} )" },
      { "trigger": "hb_hget",           "contents": "hb_hGet( ${1:hHash}, ${2:Key} )" },
      { "trigger": "hb_hgetdef",        "contents": "hb_hGetDef( ${1:hHash}, ${2:Key}, ${3:[DefaultValue]} )" },
      { "trigger": "hb_hgetref",        "contents": "hb_hGetRef( ${1:hHash}, ${2:Key}, ${3:[xValue]} )" },
      { "trigger": "hb_hhaskey",        "contents": "hb_hHasKey( ${1:hHash}, ${2:xKey}, ${3:@nPos} )" },
      { "trigger": "hb_hkeeporder",     "contents": "hb_hKeepOrder( ${1:hHash}, ${2:[lFlag]} )" },
      { "trigger": "hb_hkeyat",         "contents": "hb_hKeyAt( ${1:hHash}, ${2:nPos} )" },
      { "trigger": "hb_hkeys",          "contents": "hb_hKeys( ${1:hHash} )" },
      { "trigger": "hb_hmerge",         "contents": "hb_hMerge( ${1:hsDestination}, ${2:hsSource}, ${3:bBlock | nMethod} )" },
      { "trigger": "hb_hpairat",        "contents": "hb_hPairAt( ${1:hHash}, ${2:nPosition} )" },
      { "trigger": "hb_hpos",           "contents": "hb_hPos( ${1:hHash}, ${2:Key} )" },
      { "trigger": "hb_hpos",           "contents": "hb_hPos( ${1:hHash}, ${2:Key} )" },
      { "trigger": "hb_hrbdo",          "contents": "hb_HrbDo( ${1:pHbPCode}, ${2:...} )" },
      { "trigger": "hb_hrbgetfunlist",  "contents": "hb_HrbGetFunList( ${1:pHRB}, ${2:[nType]} )" },
      { "trigger": "hb_hrbgetfunsym",   "contents": "hb_HrbGetFunSym( ${1:pHRB}, ${2:[cFuncName]} )" },
      { "trigger": "hb_hrbload",        "contents": "hb_HrbLoad( ${1:nOptions}, ${2:cHrbFileName}, ${3:[xparamList...]} )" },
      { "trigger": "hb_hrbrun",         "contents": "hb_HrbRun( ${1:nOptions}, ${2:cHrbFileName}, ${3:[xparam...]} )" },
      { "trigger": "hb_hrbsignature",   "contents": "hb_HrbSignature()" },
      { "trigger": "hb_hrbunload",      "contents": "hb_hrbGetFunSym( ${1:pHRB} )" },
      { "trigger": "hb_hscan",          "contents": "hb_hScan( ${1:hHash}, ${2:uValue | bBlock}, /*[ ${3:nStart}, ${4:nCount]} /*]*/, ${5:lExact} )" },
      { "trigger": "hb_hset",           "contents": "hb_hSet( ${1:hHash}, ${2:xKey}, ${3:[Value]} )" },
      { "trigger": "hb_hsetdef",        "contents": "hb_hSetDef( ${1:hHash}, ${2:xKey}, ${3:[xDefValue]} )" },
      { "trigger": "hb_hsort",          "contents": "hb_hSort( ${1:hHash} )" },
      { "trigger": "hb_hvalueat",       "contents": "hb_hValueAt( ${1:hHash}, ${2:nPos}, ${3:[xNewValue]} )" },
      { "trigger": "hb_hvalues",        "contents": "hb_hValues( ${1:hHash} )" },

      { "trigger": "hb_fcommit",        "contents": "hb_FCommit( ${1:hFileHandle} )" },
      { "trigger": "hb_fcopy",          "contents": "hb_FCopy( ${1:cSourceFile}, ${2:cDestinationFile} )" },
      { "trigger": "hb_fcreate",        "contents": "hb_FCreate( ${1:cFile}, ${2:nCreateFlags}, ${3:nOpenFlags} )" },
      { "trigger": "hb_feof",           "contents": "hb_FEof( ${1:nHandle} )" },
      { "trigger": "hb_fgetattr",       "contents": "hb_FGetAttr( ${1:cFileName}, ${2:@nAttr} )" },
      { "trigger": "hb_fgetdatetime",   "contents": "hb_FGetDateTime( ${1:cFileName}, ${2:@tTimeStamp}, ${3:[@cTime]} )" },
      { "trigger": "hb_fielddec",       "contents": "hb_FieldDec( ${1:cFieldName | nFieldPos} )" },
      { "trigger": "hb_fieldlen",       "contents": "hb_FieldLen( ${1:cFieldName | nFieldPos} )" },
      { "trigger": "hb_fieldtype",      "contents": "hb_FieldType( ${1:cFieldName | nFieldPos} )" },
      { "trigger": "hb_filedelete",     "contents": "hb_FileDelete( ${1:cFileMask}, ${2:[cAttr]} )" },
      { "trigger": "hb_fileexists",     "contents": "hb_FileExists( ${1:cFileName} )" },
      { "trigger": "hb_filematch",      "contents": "hb_FileMatch( ${1:cFileName}, ${2:cPattern} )" },
      { "trigger": "hb_flock",          "contents": "hb_FLock( ${1:nHandle}, ${2:nOffset}, ${3:nBytes}, ${4:[nType]} )" },
      { "trigger": "hb_fnamedir",       "contents": "hb_FNameDir( ${1:cFileName} )" },
      { "trigger": "hb_fnameexists",    "contents": "hb_FNameExists( ${1:cFileName} )" },
      { "trigger": "hb_fnameext",       "contents": "hb_FNameExt( ${1:cFileName} )" },
      { "trigger": "hb_fnameextset",    "contents": "hb_FNameExtSet( ${1:cFileName}, ${2:cExt} )" },
      { "trigger": "hb_fnameextsetdef", "contents": "hb_FNameExtSetDef( ${1:cFileName}, ${2:cDefExt} )" },
      { "trigger": "hb_fnamemerge",     "contents": "hb_FNameMerge( ${1:cPath}, ${2:cFileName} ${3:cFileExtension} )" },
      { "trigger": "hb_fnamename",      "contents": "hb_FNameName( ${1:cFileName} )" },
      { "trigger": "hb_fnamenameext",   "contents": "hb_FNameNameExt( ${1:cFileName} )" },
      { "trigger": "hb_fnamesplit",     "contents": "hb_FNameSplit( ${1:cFileName}, ${2:[@cFullPathWithDrive]}, ${2:[@cName]}, ${3:[@cExt]}, ${4:[@cDriveLetter]} )" },
      { "trigger": "hb_fornext",        "contents": "hb_ForNext( ${1:[nStart]}, ${2:nEnd | bEnd}, ${3:bCode}, ${4:[nStep]} )" },
      { "trigger": "hb_freadlen",       "contents": "hb_FReadLen( ${1:nFHandle}, ${2:nBytesToRead} )" },
      { "trigger": "hb_fsetattr",       "contents": "hb_FSetAttr( ${1:cFileName}, ${2:nAttr} )" },
      { "trigger": "hb_fsetdatetime",   "contents": "hb_FSetDateTime( ${1:cFileName}, ${2:[dDate]}, ${3:[cTime HH:MM:SS]} )" },
      { "trigger": "hb_fsize",          "contents": "hb_FSize( ${1:cFileName}, ${2:[lUseDirEntry]} )" },
      { "trigger": "hb_ftempcreate",    "contents": "hb_FTempCreate( ${1:[cTempDir]}, ${2:[cPrefix]}, ${3:[nFileAttr]}, ${4:[@cFileName]} )" },
      { "trigger": "hb_ftempcreateex",  "contents": "hb_FTempCreateEx( ${1:[@cFileName]}, ${2:[cTempDir]}, ${3:[cPrefix]}, ${4:[cExtension]}, ${5:[nFileAttr]} )" },
      { "trigger": "hb_funlock",        "contents": "hb_FUnlock( ${1:nHandle}, ${2:nOffset}, ${3:nBytes} )" },

      { "trigger": "hb_gcall",          "contents": "hb_gcAll()" },
      { "trigger": "hb_gcstep",         "contents": "hb_gcStep()" },
      { "trigger": "hb_get",            "contents": "hb_Get()" },
      { "trigger": "hb_getreadvar",     "contents": "hb_GetReadVar()" },
      { "trigger": "hb_getstderr",      "contents": "hb_GetStdErr()" },
      { "trigger": "hb_getstdin",       "contents": "hb_GetStdIn()" },
      { "trigger": "hb_getstdout",      "contents": "hb_GetStdOut()" },
      { "trigger": "hb_getenv",         "contents": "hb_GetEnv( ${1:cEnvVar}, ${2:[cDefaultValue]} )" },
      { "trigger": "hb_gtalert",        "contents": "hb_gtAlert()" },
      { "trigger": "hb_gtcreate",       "contents": "hb_gtCreate()" },
      { "trigger": "hb_gtinfo",         "contents": "hb_GtInfo( ${1:nInfo}, ${2:[xParam1]}, ${2:[xParam2]} )" },
      { "trigger": "hb_gtreload",       "contents": "hb_gtReload()" },
      { "trigger": "hb_gtselect",       "contents": "hb_gtSelect()" },
      { "trigger": "hb_gtsys",          "contents": "hb_GTSYS()" },
      { "trigger": "hb_gtlock",         "contents": "hb_gtLock()" },
      { "trigger": "hb_gtunlock",       "contents": "hb_gtUnlock()" },
      { "trigger": "hb_gtversion",      "contents": "hb_GtVersion()" },

      { "trigger": "hb_idleadd",        "contents": "hb_IdleAdd( ${1:bAction} )" },
      { "trigger": "hb_idledel",        "contents": "hb_IdleDel( ${1:nHandle} )" },
      { "trigger": "hb_idlereset",      "contents": "hb_IdleReset()" },
      { "trigger": "hb_idlesleep",      "contents": "hb_IdleSleep( ${1:nSeconds} )" },
      { "trigger": "hb_idlestate",      "contents": "hb_IdleState()" },
      { "trigger": "hb_isarray",        "contents": "hb_IsArray( ${1:xExp} )" },
      { "trigger": "hb_isblock",        "contents": "hb_IsBlock( ${1:xExp} )" },
      { "trigger": "hb_ischar",         "contents": "hb_IsChar( ${1:xExp} )" },
      { "trigger": "hb_isdate",         "contents": "hb_IsDate( ${1:xExp} )" },
      { "trigger": "hb_isdatetime",     "contents": "hb_IsDateTime( ${1:xExp} )" },
      { "trigger": "hb_isevalitem",     "contents": "hb_IsEvalItem( ${1:xExp} )" },
      { "trigger": "hb_isfunction",     "contents": "hb_IsFunction( ${1:cFunctionName} )" },
      { "trigger": "hb_ishash",         "contents": "hb_IsHash( ${1:xExp} )" },
      { "trigger": "hb_ishashkey",      "contents": "hb_IsHashKey( ${1:xExp} )" },
      { "trigger": "hb_islogical",      "contents": "hb_IsLogical( ${1:xExp} )" },
      { "trigger": "hb_ismemo",         "contents": "hb_IsMemo( ${1:xExp} )" },
      { "trigger": "hb_isnil",          "contents": "hb_IsNIL( ${1:xExp} )" },
      { "trigger": "hb_isnull",         "contents": "hb_IsNull( ${1:xExp} )" },
      { "trigger": "hb_isnumeric",      "contents": "hb_IsNumeric( ${1:xExp} )" },
      { "trigger": "hb_isobject",       "contents": "hb_IsObject( ${1:xExp} )" },
      { "trigger": "hb_ispointer",      "contents": "hb_IsPointer( ${1:xExp} )" },
      { "trigger": "hb_isprinter",      "contents": "hb_IsPrinter( ${1:cPrinter} )" },
      { "trigger": "hb_isregex",        "contents": "hb_IsRegex( ${1:xExp} )" },
      { "trigger": "hb_isstring",       "contents": "hb_IsString( ${1:xExp} )" },
      { "trigger": "hb_issymbol",       "contents": "hb_IsSymbol( ${1:xExp} )" },
      { "trigger": "hb_istimestamp",    "contents": "hb_IsTimestamp( ${1:xExp} )" },

      { "trigger": "hb_jsondecode",     "contents": "hb_jsonDecode( ${1:cJSON}, ${2:xValue}, ${3:[cdpID]} )" },
      { "trigger": "hb_jsonencode",     "contents": "hb_jsonEncode( ${1:xValue}, ${2:lHuman}, ${3:[nIndent]}, ${4:[cDestCP]} )" },

      { "trigger": "hb_keychar",        "contents": "hb_KeyChar( ${1:nKey} )" },
      { "trigger": "hb_keyclear",       "contents": "hb_KeyClear()" },
      { "trigger": "hb_keycode",        "contents": "hb_KeyCode( ${1:cChar} )" },
      { "trigger": "hb_keyext",         "contents": "hb_KeyExt()" },
      { "trigger": "hb_keyins",         "contents": "hb_KeyIns( ${1:xValue} )" },
      { "trigger": "hb_keylast",        "contents": "hb_KeyLast()" },
      { "trigger": "hb_keymod",         "contents": "hb_KeyMod( ${1:nExtKey} )" },
      { "trigger": "hb_keynext",        "contents": "hb_KeyNext( ${1:nEventMask} )" },
      { "trigger": "hb_keyput",         "contents": "hb_KeyPut( ${1:xValue} )" },
      { "trigger": "hb_keysetlast",     "contents": "hb_KeySetLast( ${1:nKeyCode} )" },
      { "trigger": "hb_keystd",         "contents": "hb_KeyStd( ${1:nExtKey} )" },
      { "trigger": "hb_keyval",         "contents": "hb_KeyVal( ${1:nExtKey} )" },

      { "trigger": "hb_langerrmsg",     "contents": "hb_LangErrMsg( ${1:nErrorCode} )" },
      { "trigger": "hb_langmessage",    "contents": "hb_LangMessage( ${1:nMsg}, ${2:[cLangID]} )" },
      { "trigger": "hb_langname",       "contents": "hb_LangName( ${1:cLangID} )" },
      { "trigger": "hb_langnew",        "contents": "hb_LangNew( ${1:cNewLangId}, ${2:cNewLangCpId}, ${3:cLangID}, ${4:cLangCpId} )" },
      { "trigger": "hb_langselect",     "contents": "hb_LangSelect( ${1:[cNewLang]}, ${2:[cCodepage]} )" },
      { "trigger": "hb_lefteq",         "contents": "hb_LeftEq( ${1:cString}, ${2:cSubStringcSubString} )" },
      { "trigger": "hb_lefteqi",        "contents": "hb_LeftEqI( ${1:cString}, ${2:cSubString} )" },

      { "trigger": "hb_memoread",       "contents": "hb_MemoRead( ${1:cFile} )" },
      { "trigger": "hb_memowrit",       "contents": "hb_MemoWrit( ${1:cFile}, ${2:cText} )" },
      { "trigger": "hb_mleval",         "contents": "hb_MlEval( ${1:bCode}, ${2:[nLineLength]}, ${3:[nTabSize]}, ${4:[lWrap]}, ${5:[nPos]}, ${6:[nRow]}, ${7:[nCol]} )" },
      { "trigger": "hb_minute",         "contents": "hb_Minute( ${1:tTimeStamp} )" },
      { "trigger": "hb_msectot",        "contents": "hb_MSecToT( ${1:nMilliseconds} )" },
      { "trigger": "hb_mvrestore",      "contents": "hb_mvRestore( ${1:cFileName}, ${2:[lAdditive]}, ${3:[cMask]}, ${4:[lIncludeMask]} )" },
      { "trigger": "hb_mvsave",         "contents": "hb_mvSave( ${1:cFileName}, ${2:cMask}, ${3:lIncludeMask} )" },

      { "trigger": "hb_ntoc",           "contents": "hb_NtoC( ${1:nVal}, ${2:[nDec]} )" },
      { "trigger": "hb_ntos",           "contents": "hb_NtoS( ${1:nVal} )" },
      { "trigger": "hb_ntohour",        "contents": "hb_NToHour( ${1:nTimeDiff} )" },
      { "trigger": "hb_ntomin",         "contents": "hb_NToMin( ${1:nTimeDiff} )" },
      { "trigger": "hb_ntosec",         "contents": "hb_NToSec( ${1:nTimeDiff} )" },
      { "trigger": "hb_ntomsec",        "contents": "hb_NToMSec( ${1:nTimeDiff} )" },
      { "trigger": "hb_ntot",           "contents": "hb_NtoT( ${1:nValue} )" },
      { "trigger": "hb_numtohex",       "contents": "hb_NumToHex( ${1:nDecNumber}, ${2:[nHexDigits]} )" },
      { "trigger": "hb_ntomin",         "contents": "hb_NToMin( ${[1:nArg_1=24hrs]} )" },
      { "trigger": "hb_ntosec",         "contents": "hb_NToSec( ${[1:nArg_1=24hrs]} )" },
      { "trigger": "hb_ntomsec",        "contents": "hb_NToMSec( ${[1:nArg_1=24hrs]} )" },
      { "trigger": "hb_ntohour",        "contents": "hb_NToHour( ${[1:nArg_1=24hrs]} )" },

      { "trigger": "hb_ospathdelimiters",    "contents": "hb_OsPathDelimiters()" },
      { "trigger": "hb_ospathlistseparator", "contents": "hb_OsPathListSeparator()" },
      { "trigger": "hb_ospathseparator",     "contents": "hb_OsPathSeparator()" },

      { "trigger": "hb_pathjoin",       "contents": "hb_PathJoin( ${1:cPathAbsolute}, ${2:cPathRelative} )" },
      { "trigger": "hb_pisbyref",       "contents": "hb_PIsByRef( ${1:nParam} )" },
      { "trigger": "hb_pread",          "contents": "hb_PRead( ${1:nPipeHandle}, ${2:@cBuffer}, ${3:[nBytes]}, ${4:[nTimeOut]} )" },
      { "trigger": "hb_processclose",   "contents": "hb_ProcessClose( ${1:hProcess}, ${2:[lGentle]} )" },
      { "trigger": "hb_processopen",    "contents": "hb_ProcessOpen( ${1:cCommand}, ${2:[@cStdIn]}, ${3:[@cStdOut]}, ${4:[@cStdErr]}, ${5:[lDetach]}, ${6:[@PID]} )" },
      { "trigger": "hb_processrun",     "contents": "hb_ProcessRun( ${1:cCommand}, ${2:[cStdIn]}, ${3:[@cStdOut]}, ${4:[@cStdErr]}, ${5:[lDetach]} )" },
      { "trigger": "hb_processvalue",   "contents": "hb_ProcessValue( ${1:hProcess}, ${2:[lWait]} )" },
      { "trigger": "hb_progname",       "contents": "hb_ProgName()" },
      { "trigger": "hb_ps",             "contents": "hb_PS()" },
      { "trigger": "hb_pvalue",         "contents": "hb_PValue( ${1:nParam}, ${2:[uNewValue]} )" },
      { "trigger": "hb_pwrite",         "contents": "hb_PWrite( ${1:nPipeHandle}, ${:cBuffer}, ${:[nBytes]}, ${:[nTimeOut]} )" },

      { "trigger": "hb_rand32",         "contents": "hb_Rand32()" },
      { "trigger": "hb_randint",        "contents": "hb_RandInt( ${1:x}, ${2:[y]} )" },
      { "trigger": "hb_randnum",        "contents": "hb_RandNum( ${1:x}, ${2:[y]} )" },
      { "trigger": "hb_random",         "contents": "hb_Random( ${1:x}, ${2:[y]} )" },
      { "trigger": "hb_randomint",      "contents": "hb_RandomInt( ${1:x}, ${2:[y]} )" },
      { "trigger": "hb_randomintmax",   "contents": "hb_RandomIntMax()" },
      { "trigger": "hb_randomseed",     "contents": "hb_RandomSeed( ${1:nSeed} )" },
      { "trigger": "hb_randstr",        "contents": "hb_RandStr( ${1:nChars} )" },
      { "trigger": "hb_rascan",         "contents": "hb_RAScan( ${1:aArray}, ${2:uValue}, ${3:[nStart]}, ${4:[nCount]}, ${5:[lExact]} )" },
      { "trigger": "hb_rat",            "contents": "hb_RAt( ${1:cSearchFor}, ${2:cIntoString}, ${3:[nStart]}, ${4:[nEnd]} )" },
      { "trigger": "hb_rddinfo",        "contents": "hb_RddInfo( ${1:nConstandIndex}, ${2:[xNewSetting]}, ${3:[xcRDDName]}, ${4:[nConnection]} )" },
      { "trigger": "hb_releasecpu",     "contents": "hb_ReleaseCPU()" },
      { "trigger": "hb_run",            "contents": "hb_Run( ${1:cCommand} )" },

      { "trigger": "hb_scroll",         "contents": "hb_Scroll( ${1:nTop}, ${2:nLeft}, ${3:nBottom}, ${4:nRight}, ${5:cnColor}, ${6:cFillChar} )" },
      { "trigger": "hb_sec",            "contents": "hb_Sec( ${1:tTimeStamp} )" },
      { "trigger": "hb_secondscpu",     "contents": "hb_SecondsCPU( ${1:[n]} )" },
      { "trigger": "hb_sectot",         "contents": "hb_SecToT( ${1:nSeconds} )" },
      { "trigger": "hb_serialize",      "contents": "hb_Serialize( ${1:xValue}, ${2:[lNumSize]}, ${3:[cCdpIN]}, ${4:[cCdpOUT]} )" },
      { "trigger": "hb_setenv",         "contents": "hb_setEnv( ${1:cEnvName}, ${2:[cNewVal]} )" },
      { "trigger": "hb_setkeycp",       "contents": "hb_SetKeyCP( ${1:cTermCP}, ${2:[cHostCP]} )" },
      { "trigger": "hb_settermcp",      "contents": "hb_SetTermCP( ${1:cTermCP}, ${2:[cHostCP]}, ${3:[lBoxChar]} )" },
      { "trigger": "hb_setdispcp",      "contents": "hb_SetDispCP( ${1:cTermCP}, ${2:[cHostCP]}, ${3:[lBoxChar]} )" },
      { "trigger": "hb_stod",           "contents": "hb_StoD( ${1:[cDate]} )" },
      { "trigger": "hb_stot",           "contents": "hb_StoT( ${1:}, ${:} )" },
      { "trigger": "hb_strcdecode",     "contents": "hb_StrCDecode( ${1:cStr}, ${2:@lCont} )" },
      { "trigger": "hb_strclear",       "contents": "hb_StrClear( ${1:@cVar} )" },
      { "trigger": "hb_strdecodescape", "contents": "hb_StrDecodEscape( ${1:cEscSeqStr} )" },
      { "trigger": "hb_strformat",      "contents": "hb_StrFormat( ${1:%cFormat1...%cFormatX}, ${2:nParam1, ..., nParamN} )" },
      { "trigger": "hb_strisutf8",      "contents": "hb_StrIsUTF8( ${1:cString} )" },
      { "trigger": "hb_strreplace",     "contents": "hb_StrReplace( ${1:cString}, ${2:[cSource | acSource | hReplace]}, ${3:[cDest> | acDest]} )" },
      { "trigger": "hb_strshrink",      "contents": "hb_StrShrink( ${1:cString}, ${2:[nCount]} )" },
      { "trigger": "hb_strtoexp",       "contents": "hb_StrToExp( ${1:cString}, ${2:[lEscaped]} )" },
      { "trigger": "hb_strtohex",       "contents": "hb_StrToHex( ${1:cString}, ${2:[cSeparator]} )" },
      { "trigger": "hb_strtots",        "contents": "hb_StrToTS( ${1:cTimeStamp} )" },
      { "trigger": "hb_strtoutf8",      "contents": "hb_StrToUTF8( ${1:cStr}, ${2:[cCPID]} )" },
      { "trigger": "hb_strxor",         "contents": "hb_StrXor( ${1:cString}, ${2:cnBytes} )" },
      { "trigger": "hb_symbol_unused",  "contents": "HB_SYMBOL_UNUSED( ${1:symbol} )" },

      { "trigger": "hb_tokencount",     "contents": "hb_TokenCount( ${1:cString}, ${2:cDelimiter}, ${3:lSkipStrings}, ${4:lDoubleQuoteOnly} )" },
      { "trigger": "hb_tokenget",       "contents": "hb_TokenGet( ${1:cString} , ${2:nToken}, ${3:[cDelimiter]}, ${4:[lSkipStrings]}, ${5:[lDoubleQuoteOnly]} )" },
      { "trigger": "hb_translate",      "contents": "hb_Translate( ${1:cString}, ${2:[FromCodePageID]}, ${3:[ToCodePageID]})" },
      { "trigger": "hb_tokenptr",       "contents": "hb_TokenPtr( ${1:cString}, ${2:[@]nPos}, ${3:[cDelim]}, ${4:[lSkipStrings]}, ${5:[lDoubleQuoteOnly]})" },
      { "trigger": "hb_tstostr",        "contents": "hb_TStoStr( ${1:tTimeStamp}, ${2:[lPacked]} )" },
      { "trigger": "hb_tstoutc",        "contents": "hb_TStoUTC( ${1:[tLocalTime]} )" },
      { "trigger": "hb_ttoc",           "contents": "hb_TtoC( ${1:dDate | tTimeStamp}, ${2:[cDateFormat]}, ${3:[cTimeFormat]})" },
      { "trigger": "hb_ttod",           "contents": "hb_TtoD( ${1:dDate | tTimeStamp}, ${2:[@nSeconds | @cTime]}, ${3:[@cTimeFormat]} )" },
      { "trigger": "hb_tton",           "contents": "hb_TtoN( ${1:dDate | tTimeStamp} )" },
      { "trigger": "hb_ttos",           "contents": "hb_TtoS( ${1:dDate | tTimeStamp} )" },
      { "trigger": "hb_ttohour",        "contents": "hb_TtoHour( ${1:tTimeStamp} )" },
      { "trigger": "hb_ttomin",         "contents": "hb_TtoMin( ${1:tTimeStamp} )" },
      { "trigger": "hb_ttosec",         "contents": "hb_TtoSec( ${1:tTimeStamp} )" },
      { "trigger": "hb_ttomsec",        "contents": "hb_TtoMSec( ${1:tTimeStamp} )" },

      { "trigger": "hb_uat",            "contents": "hb_UAt( ${1:cSubString}, ${2:cString}, ${3:[nFrom]}, ${4:[nTo]} )" },
      { "trigger": "hb_uchar",          "contents": "hb_UChar( ${1:nCode} )" },
      { "trigger": "hb_ucode",          "contents": "hb_UCode( ${1:cText} )" },
      { "trigger": "hb_ulen",           "contents": "hb_ULen( ${1:cText} )" },
      { "trigger": "hb_uleft",          "contents": "hb_ULeft( ${1:cString}, ${2:nCount} )" },
      { "trigger": "hb_upadc",          "contents": "hb_UPadC( ${1:exp}, ${2:nLength}, ${3:[cFillChar]} )" },
      { "trigger": "hb_upadl",          "contents": "hb_UPadL( ${1:exp}, ${2:nLength}, ${3:[cFillChar]} )" },
      { "trigger": "hb_upadr",          "contents": "hb_UPadR( ${1:exp}, ${2:nLength}, ${3:[cFillChar]} )" },
      { "trigger": "hb_upeek",          "contents": "hb_UPeek( ${1:cText}, ${2:n} )" },
      { "trigger": "hb_upoke",          "contents": "hb_UPoke( ${1:[@]cText}, ${2:n}, ${3:nVal} )" },
      { "trigger": "hb_uright",         "contents": "hb_URight( ${1:cString}, ${2:nCount} )" },
      { "trigger": "hb_userlang",       "contents": "hb_UserLang()" },
      { "trigger": "hb_username",       "contents": "hb_UserName()" },
      { "trigger": "hb_ustuff",         "contents": "hb_UStuff( ${1:cString}, ${2:nAt}, ${3:nDel}, ${4:cIns} )" },
      { "trigger": "hb_usubstr",        "contents": "hb_USubStr( ${1:cString}, ${2:nStart}, ${3:nCount} )" },
      { "trigger": "hb_utcoffset",      "contents": "hb_UTCOffset( ${1:[tLocalTime]} )" },
      { "trigger": "hb_utf8asc",        "contents": "hb_Utf8Asc( ${1:cExp} )" },
      { "trigger": "hb_utf8at",         "contents": "hb_Utf8At( ${1:...} )" },
      { "trigger": "hb_utf8chr",        "contents": "hb_Utf8Chr( ${1:n} )" },
      { "trigger": "hb_utf8left",       "contents": "hb_Utf8Left( ${1:...} )" },

      { "trigger": "hb_utf8len",        "contents": "hb_Utf8Len( ${1:cText} )" },
      { "trigger": "hb_utf8peek",       "contents": "hb_Utf8Peek( ${1:cText}, ${2:n} )" },
      { "trigger": "hb_utf8poke",       "contents": "hb_Utf8Poke( ${1:[@]cText}, ${2:n}, ${3:nVal} )" },
      { "trigger": "hb_utf8rat",        "contents": "hb_Utf8RAt()" },
      { "trigger": "hb_utf8right",      "contents": "hb_Utf8Right()" },
      { "trigger": "hb_utf8strtran",    "contents": "hb_Utf8StrTran()" },
      { "trigger": "hb_utf8stuff",      "contents": "hb_Utf8Stuff()" },
      { "trigger": "hb_utf8substr",     "contents": "hb_Utf8SubStr()" },
      { "trigger": "hb_utf8tostr",      "contents": "hb_Utf8ToStr( ${1:cUTF8Str}, ${2:[cCPID]} )" },

      { "trigger": "hb_val",            "contents": "hb_Val( ${1:cStr}, ${2:[nLen]} )" },
      { "trigger": "hb_valtoexp",       "contents": "hb_ValToExp( ${1:xVal} )" },
      { "trigger": "hb_valtostr",       "contents": "hb_ValToStr( ${1:xValue} )" },
      { "trigger": "hb_version",        "contents": "hb_Version(${1:[n]})" },

      { "trigger": "hb_vfattrget",      "contents": "hb_vfAttrGet( ${1:cFileName}, ${2:@nAttr} )" },
      { "trigger": "hb_vfattrset",      "contents": "hb_vfAttrSet( ${1:cFileName}, ${2:nAttr} )" },
      { "trigger": "hb_vfclose",        "contents": "hb_vfClose( ${1:pHandle} )" },
      { "trigger": "hb_vfcommit",       "contents": "hb_vfCommit( ${1:pHandle} )" },
      { "trigger": "hb_vfconfig",       "contents": "hb_vfConfig( ${1:pHandle}, ${2:nSet}, ${3:[nParam]} )" },
      { "trigger": "hb_vfcopyfile",     "contents": "hb_vfCopyFile( ${1:cFileSrc}, ${2:cFileDst} )" },
      { "trigger": "hb_vfdirectory",    "contents": "hb_vfDirectory( ${1:cDirSpec}, ${2:[cAttr]} )" },
      { "trigger": "hb_vfdirexists",    "contents": "hb_vfDirExists( ${1:cDirName} )" },
      { "trigger": "hb_vfdirmake",      "contents": "hb_vfDirMake( ${1:cDirName} )" },
      { "trigger": "hb_vfdirremove",    "contents": "hb_vfDirRemove( ${1:cDirName} )" },
      { "trigger": "hb_vfdirspace",     "contents": "hb_vfDirSpace( ${1:cDirName}, ${2:[nInfoType]} )" },
      { "trigger": "hb_vfeof",          "contents": "hb_vfEof( ${1:pHandle} )" },
      { "trigger": "hb_vferase",        "contents": "hb_vfErase( ${1:cFileName} )" },
      { "trigger": "hb_vfexists",       "contents": "hb_vfExists( ${1:cFileName}, ${2:[@cDestFileName]} )" },
      { "trigger": "hb_vfflush",        "contents": "hb_vfFlush( ${1:pHandle}, ${2:[lDirtyOnly]} )" },
      { "trigger": "hb_vffromsocket",   "contents": "hb_vfFromSocket( ${1:pSocket} )" },
      { "trigger": "hb_vfhandle",       "contents": "hb_vfHandle( ${1:pHandle} )" },
      { "trigger": "hb_vflink",         "contents": "hb_vfLink( ${1:cExistingFileName}, ${2:cNewFileName} )" },
      { "trigger": "hb_vflinkread",     "contents": "hb_vfLinkRead( ${1:cFileName} )" },
      { "trigger": "hb_vflinksym",      "contents": "hb_vfLinkSym( ${1:cTargetFileName}, ${2:cNewFileName} )" },
      { "trigger": "hb_vfload",         "contents": "hb_vfLoad( ${1:cFileName}, ${2:[nMaxSize]} )" },
      { "trigger": "hb_vflock",         "contents": "hb_vfLock( ${1:pHandle}, ${2:nStart}, ${3:nLen}, ${4:[nType]} )" },
      { "trigger": "hb_vflocktest",     "contents": "hb_vfLockTest( ${1:pHandle}, ${2:nStart}, ${3:nLen}, ${4:]nType]} )" },
      { "trigger": "hb_vfmovefile",     "contents": "hb_vfMoveFile( ${1:cFileSrc}, ${2:cFileDst} )" },
      { "trigger": "hb_vfopen",         "contents": "hb_vfOpen( ${1:[@]cFileName}, ${2:[nModeAttr]} )" },
      { "trigger": "hb_vfread",         "contents": "hb_vfRead( ${1:pHandle}, ${2:@cBuff}, ${3:[nToRead]}, ${4:[nTimeOut]} )" },
      { "trigger": "hb_vfreadat",       "contents": "hb_vfReadAt( ${1:pHandle}, ${2:@cBuff}, ${3:[nToRead]}, ${4:[nAtOffset]} )" },
      { "trigger": "hb_vfreadlen",      "contents": "hb_vfReadLen( ${1:pHandle}, ${2:nToRead}, ${3:[nTimeOut]} )" },
      { "trigger": "hb_vfrename",       "contents": "hb_vfRename( ${1:cFileSrc}, ${2:cFileDst} )" },
      { "trigger": "hb_vfseek",         "contents": "hb_vfSeek( ${1:pHandle}, ${2:nOffset}, ${3:[nWhence]} )" },
      { "trigger": "hb_vfsize",         "contents": "hb_vfSize( ${1:pHandle | cFileName}, ${2:[lUseDirEntry]} )" },
      { "trigger": "hb_vftempfile",     "contents": "hb_vfTempFile( ${1:@cFileName}, ${2:[cDir]}, ${3:[cPrefix]}, ${4:[cExt]}, ${5:[nAttr]} )" },
      { "trigger": "hb_vftimeget",      "contents": "hb_vfTimeGet( ${1:cFileName}, ${2:@tsDateTime | @dDate}, ${3:[@cTime]} )" },
      { "trigger": "hb_vftimeset",      "contents": "hb_vfTimeSet( ${1:cFileName}, ${2:tsDateTime | dDate}, ${3:[cTime]} )" },
      { "trigger": "hb_vftrunc",        "contents": "hb_vfTrunc( ${1:pHandle}, ${2:[nAtOffset]} )" },
      { "trigger": "hb_vfunlock",       "contents": "hb_vfUnlock( ${1:pHandle}, ${2:nStart}, ${3:nLen} )" },
      { "trigger": "hb_vfwrite",        "contents": "hb_vfWrite( ${1:pHandle}, ${2:cBuff}, ${3:[nToWrite]}, ${4:[nTimeOut]} )" },
      { "trigger": "hb_vfwriteat",      "contents": "hb_vfWriteAt( ${1:pHandle}, ${2:cBuff}, ${3:[nToWrite]}, ${4:[nAtOffset]} )" },

      { "trigger": "hb_waeval",         "contents": "hb_WAEval( ${1:pBlock} )" },
      { "trigger": "hb_week",           "contents": "hb_Week( ${1:dDate}, ${2:[@nYear]}, ${3:[@nDayOfWeek]} )" },
      { "trigger": "hb_wildmatch",      "contents": "hb_WildMatch( ${1:cPattern}, ${2:cValue}, ${3:[lExact]} )" },
      { "trigger": "hb_wildmatchi",     "contents": "hb_WildMatchI( ${1:cPattern}, ${2:cValue} )" },
/* I */
      { "trigger": "I2Bin",             "contents": "I2Bin( ${1:nInteger} )" },
      { "trigger": "IndexExt",          "contents": "IndexExt()" },
      { "trigger": "IndexKey",          "contents": "IndexKey( ${1:nOrder} )" },
      { "trigger": "IndexOrd",          "contents": "IndexOrd()" },
      { "trigger": "Inkey",             "contents": "Inkey( ${1:[nSeconds]}, ${2:[nEventMask]} )" },
      { "trigger": "Int",               "contents": "Int( ${1:nExp} )" },
      { "trigger": "IsAlpha",           "contents": "IsAlpha( ${1:cString} )" },
      { "trigger": "IsColor",           "contents": "IsColor()" },
      { "trigger": "IsColour",          "contents": "IsColour()" },
      { "trigger": "IsDigit",           "contents": "IsDigit( ${1:cString} )" },
      { "trigger": "IsLeap",            "contents": "IsLeap( ${1:[dDate]} )" },
      { "trigger": "IsLeapYear",        "contents": "IsLeapYear( ${1:dDate} )" },
      { "trigger": "IsLower",           "contents": "IsLower( ${1:cString} )" },
      { "trigger": "IsNegative",        "contents": "IsNegative( ${1:cChar} )" },
      { "trigger": "IsPrinter",         "contents": "IsPrinter()" },
      { "trigger": "IsUpper",           "contents": "IsUpper( ${1:cString} )" },
      { "trigger": "iif",               "contents": "iif( ${1:lCondition}, ${2:expTrue}, ${3:expFalse} )" },
/* J */
      { "trigger": "jointhread",        "contents": "JoinThread( ${1:pThreadHandle} )" },
      { "trigger": "justleft",          "contents": "JustLeft( ${1:cString}, ${2:[xChar]}} )" },
/* K */
      { "trigger": "kbdstat",           "contents": "KbdStat()" },
      { "trigger": "keysec",            "contents": "KeySec( ${1:nkey}, ${2:ntime}, ${3:[ncounter]}, ${4:[lmode]} )" },
      { "trigger": "keytime",           "contents": "KeyTime( ${1:nkey}, ${2:ctime} )" },
      { "trigger": "killallthreads",    "contents": "KillAllThreads()" },
      { "trigger": "killthread",        "contents": "Killthread( ${1:pthreadhandle} )" },
      { "trigger": "ksetcaps",          "contents": "KSetCaps( ${1:[lnewmode]} )" },
      { "trigger": "ksetins",           "contents": "KSetIns( ${1:[lnewmode]} )" },
      { "trigger": "ksetnum",           "contents": "KSetNum( ${1:[lnewmode]} )" },
      { "trigger": "ksetscroll2",       "contents": "KSetScroll2( ${1:lnewmode} )" },
/* L */
      { "trigger": "l2bin",             "contents": "l2bin( ${1:nExp} )" },
      { "trigger": "lastkey",           "contents": "LastKey()" },
      { "trigger": "lastrec",           "contents": "LastRec()" },
      { "trigger": "left",              "contents": "Left( ${1:cString}, ${2:nCount} )" },
      { "trigger": "len",               "contents": "Len( ${1:cString | aArray | hHash} )" },
      { "trigger": "lennum",            "contents": "LenNum( ${1:nNum} )" },
      { "trigger": "log",               "contents": "Log( ${1:nExp} )" },
      { "trigger": "lower",             "contents": "Lower( ${1:cString} )" },
      { "trigger": "ltrim",             "contents": "Ltrim( ${1:cString} )" },
      { "trigger": "lupdate",           "contents": "Lupdate()" },
/* M */
      { "trigger": "max",               "contents": "Max( ${1:xExp1}, ${2:xExp2} )" },
      { "trigger": "maxcol",            "contents": "MaxCol()" },
      { "trigger": "maxrow",            "contents": "MaxRow()" },
      { "trigger": "mcol",              "contents": "MCol()" },
      { "trigger": "mdy",               "contents": "MDY( ${1:[dDate]} )" },
      { "trigger": "memoedit",          "contents": "MemoEdit( ${1:[cString]}, ${2:[nTop]}, ${3:[nLeft]}, ${4:[nBottom]}, ${5:[nRight]}, ${6:[lEditMode]}, ${7:[cUsrFunction]}, ${8:[nLineLength]}, ${9:[nTabSize]}, ${10:[nTxtBufferRow]}, ${11:[nTxtBufferCol]}, ${12:[nWindowRow]}, ${13:[nWindowCol]} )" },
      { "trigger": "memoline",          "contents": "MemoLine( ${1:cString}, ${2:[nLineLength]}, ${3:[nLineNumber]}, ${4:[nTabSize]}, ${5:[lWrap]} )" },
      { "trigger": "memoread",          "contents": "MemoRead( ${1:cFile} )" },
      { "trigger": "memory",            "contents": "Memory( ${1:nType} )" },
      { "trigger": "memotran",          "contents": "MemoTran( ${1:cString}, ${2:[cReplaceHardCR]}, ${3:[cReplaceSoftCR]} )" },
      { "trigger": "memowrit",          "contents": "MemoWrit( ${1:cFile}, ${2:cString} )" },
      { "trigger": "memvarblock",       "contents": "MemvarBlock( ${1:cMemVarName} )" },
      { "trigger": "min",               "contents": "Min( ${1:value1}, ${2:value2} )" },
      { "trigger": "mlcount",           "contents": "MlCount( ${1:cString}, ${2:[nLineLength]}, ${3:[nTabSize]}, ${4:[lWrap]} )" },
      { "trigger": "mlctopos",          "contents": "MlCtoPos( ${1:cString}, ${2:nWidth}, ${3:nLine}, ${4:nCol}, ${5:[nTabSize]}, ${6:[lWrap]} )" },
      { "trigger": "mlpos",             "contents": "MlPos( ${1:cString}, ${2:nLineLength}, ${3:nLine}, ${4:[nTabSize]}, ${5:[lWrap]} )" },
      { "trigger": "mod",               "contents": "Mod( ${1:nDividend}, ${2:nDivisor} )" },
      { "trigger": "month",             "contents": "Month( ${1:dDate} )" },
      { "trigger": "mpostolc",          "contents": "mPosTolc( ${1:cString}, ${2:nWidth}, ${3:nPos}, ${4:[nTabSize]}, ${5:[lWrap]} )" },
      { "trigger": "mpresent",          "contents": "MPresent()" },
      { "trigger": "mrightdown",        "contents": "MRightDown()" },
      { "trigger": "mrow",              "contents": "MRow()" },
/* N */
      { "trigger": "nationmsg",         "contents": "NationMsg( ${1:nMsg} )" },
      { "trigger": "neterr",            "contents": "NetErr( ${1:lNewError} )" },
      { "trigger": "netname",           "contents": "NetName()" },
      { "trigger": "nextkey",           "contents": "NextKey( ${1:[lNewError]} )" },
      { "trigger": "nosnow",            "contents": "nosnow()" },
      { "trigger": "ntocdow",           "contents": "NtoCDoW( ${1:[nDayOfWeek]} )" },
      { "trigger": "ntocmonth",         "contents": "NtoCMonth( ${1:[nMonth]} )" },
      { "trigger": "numbuttons",        "contents": "NumButtons()" },
/* O */
      { "trigger": "ordbagext",         "contents": "OrdBagext()" },
      { "trigger": "ordbagname",        "contents": "OrdBagName( ${1:orderNumOrName} )" },
      { "trigger": "ordcondset",        "contents": "OrdConset( ${1:[cForCondition]}, ${2:[bForCondition]}, ${3:[lAll]}, ${4:[bWhileCondition]}, ${5:[bEval]}, ${6:[nInterval]}, ${7:[nStart]}, ${8:[nNext]}, ${9:[nRecord]}, ${10:[lRest]}, ${11:[lDescend]}, ${12:[lAdditive]}, ${13:[lCurrent]}, ${14:[lCustom]}, ${15:[lNoOptimize]}, ${16:[cWhileCondition]}, ${17:[lTemporary]}, ${18:[lUseFilter]}, ${19:[lExclusive]} )" },
      { "trigger": "ordcount",          "contents": "OrdCount( ${1:[cOrderBagName]} )" },
      { "trigger": "ordcreate",         "contents": "OrdCreate( ${1:cIndexFile}, ${2:[cIndexName]}, ${3:cIndexExpr}, ${4:bIndexExpr}, ${5:[lUnique]} )" },
      { "trigger": "orddestroy",        "contents": "OrdDestroy( ${1:cOrderName}, ${2:[cOrderBagName]} )" },
      { "trigger": "ordfor",            "contents": "OrdFor( ${1:orderNumOrName}, ${2:[cOrderBagName]} )" },
      { "trigger": "ordkey",            "contents": "OrdKey( ${1:orderNumOrName}, ${2:[cOrderBagName]} )" },
      { "trigger": "ordkeyadd",         "contents": "OrdKeyAdd( ${1:[cOrder | nPosition]}, ${2:[cIndexFile]}, ${3:[expKeyValue]} )" },
      { "trigger": "ordkeyadd",         "contents": "OrdKeyAdd( ${1:[cOrder | nPosition]}, ${2:[cIndexFile]}, ${3:[expKeyValue]} )" },
      { "trigger": "ordkeycount",       "contents": "OrdKeyCount( ${1:[cOrderName]}, ${2:[cOrderBagName]} )" },
      { "trigger": "ordkeygoto",        "contents": "OrdKeyGoto( ${1:nOrderKeyPos} )" },
      { "trigger": "ordkeyno",          "contents": "OrdKeyNo( ${1:[cOrderName]}, ${2:[cOrderBagName]} )" },
      { "trigger": "ordkeyrelpos",      "contents": "OrdKeyRelPos( ${1:[nNewPos]} )" },
      { "trigger": "ordlistadd",        "contents": "OrdListAdd( ${1:cOrderBagName}, ${2:[cOrderName]} )" },
      { "trigger": "ordlistclear",      "contents": "OrdListClear()" },
      { "trigger": "ordlistrebuild",    "contents": "OrdListRebuild()" },
      { "trigger": "ordname",           "contents": "OrdName( ${1:[nOrder]}, ${2:[cOrderBagName]} )" },
      { "trigger": "ordnumber",         "contents": "OrdNumber( ${1:[cOrderName]}, ${2:[cOrderBagName]} )" },
      { "trigger": "ordsetfocus",       "contents": "OrdSetFocus( ${1:[cOrderName | nOrder]}, ${2:[cOrderBagName]} )" },
      { "trigger": "ordsetrelation",    "contents": "OrdSetRelation( ${1:nArea | cAlias}, ${2:bKey}, ${3:[cKey]} )" },
      { "trigger": "ordwildseek",       "contents": "OrdWildSeek( ${1:cWildCardString}, ${2:[lCurrentRec]}, ${3:[lBackwards]} )" },
      { "trigger": "os",                "contents": "Os()" },
      { "trigger": "outerr",            "contents": "OutErr( ${1:expList} )" },
      { "trigger": "outstd",            "contents": "OutStd( ${1:expList} )" },
/* P */
      { "trigger": "padc",              "contents": "PadC( ${1:exp}, ${2:nLength}, ${3:[cFillChar]} )" },
      { "trigger": "padl",              "contents": "PadL( ${1:exp}, ${2:nLength}, ${3:[cFillChar]} )" },
      { "trigger": "padr",              "contents": "PadR( ${1:exp}, ${2:nLength}, ${3:[cFillChar]} )" },
      { "trigger": "pcol",              "contents": "PCol()" },
      { "trigger": "pcount",            "contents": "PCount()" },
      { "trigger": "procline",          "contents": "ProcLine( ${1:[nLevelActivation]} )" },
      { "trigger": "procname",          "contents": "ProcName( ${1:[nLevelActivation]} )" },
      { "trigger": "prow",              "contents": "Prow()" },
/* Q */
      { "trigger": "qout",              "contents": "Qout( ${1:[explist]} )" },
      { "trigger": "qqout",             "contents": "Qqout( ${1:[explist]} )" },
/* R */
      { "trigger": "rat",               "contents": "Rat( ${1:cSearch}, ${2:cTarget} )" },
      { "trigger": "rddname",           "contents": "RddName()" },
      { "trigger": "rddsetdefault",     "contents": "RddSetDefault( ${1:[cNewDefaultRDD]} )" },
      { "trigger": "readexit",          "contents": "ReadExit( ${1:lToggle} )" },
      { "trigger": "readinsert",        "contents": "ReadInsert( ${1:lToggle} )" },
      { "trigger": "readkey",           "contents": "ReadKey()" },
      { "trigger": "readmodal",         "contents": "ReadModal( ${1:aGetList} )" },
      { "trigger": "readvar",           "contents": "ReadVar()" },
      { "trigger": "reccount",          "contents": "RecCount()" },
      { "trigger": "recno",             "contents": "RecNo()" },
      { "trigger": "recsize",           "contents": "RecSize()" },
      { "trigger": "replicate",         "contents": "Replicate( ${1:cString}, ${2:nCount} )" },
      { "trigger": "restscreen",        "contents": "RestScreen( ${1:[nTop]}, ${2:[nLeft]}, ${3:[nBottom]}, ${4:[nRight]}, ${5:cScreen} )" },
      { "trigger": "right",             "contents": "Right( ${1:cString}, ${2:nCount} )" },
      { "trigger": "rlock",             "contents": "Rlock()" },
      { "trigger": "round",             "contents": "Round( ${1:nNumber}, ${2:nDecimals} )" },
      { "trigger": "row",               "contents": "row()" },
      { "trigger": "rtrim",             "contents": "Rtrim( ${1:cString} )" },
/* S */
      { "trigger": "savescreen",        "contents": "SaveScreen( ${1:[nTop]}, ${2:[nLeft]}, ${3:[nBottom]}, ${4:[nRight]} )" },
      { "trigger": "scroll",            "contents": "Scroll( ${1:[nTop]}, ${2:[nLeft]}, ${3:[nBottom]}, ${4:[nRight]}, ${5:[nVert]}, ${6:[nHoriz]} )" },
      { "trigger": "seconds",           "contents": "Seconds()" },
      { "trigger": "secs",              "contents": "Secs( ${1:cTime} )" },
      { "trigger": "select",            "contents": "Select( ${1:[cAlias]} )" },
      { "trigger": "select",            "contents": "Select( ${1:cAlias} )" },
      { "trigger": "set",               "contents": "Set( ${1:nSpecifier}, ${2:[expNewSetting]}, ${3:[lOpenMode]} )" },
      { "trigger": "setblink",          "contents": "SetBlink( ${1:[lToggle]} )" },
      { "trigger": "setcancel",         "contents": "SetCancel( ${1:[lToggle]} )" },
      { "trigger": "setcolor",          "contents": "SetColor( ${1:[cColorString]} )" },
      { "trigger": "setcursor",         "contents": "SetCursor( ${1:[nCursorShape]} )" },
      { "trigger": "setkey",            "contents": "SetKey( ${1:nKeyCode}, ${2:[bAction]} )" },
      { "trigger": "setmode",           "contents": "SetMode( ${1:nRows}, ${2:nCols} )" },
      { "trigger": "setpos",            "contents": "SetPos( ${1:nRow}, ${2:nCol} )" },
      { "trigger": "setprc",            "contents": "SetPrc( ${1:nRow}, ${2:nCol} )" },
      { "trigger": "soundex",           "contents": "Soundex( ${1:cString} )" },
      { "trigger": "space",             "contents": "Space( ${1:nNumber} )" },
      { "trigger": "sqrt",              "contents": "Sqrt( ${1:nNumber} )" },
      { "trigger": "stod",              "contents": "StoD( ${1:cDate} )" },
      { "trigger": "str",               "contents": "Str( ${1:nNumber}, ${2:[nLength]}, ${3:[nDecimals]} )" },
      { "trigger": "strtran",           "contents": "StrTran( ${1:cString}, ${2:cFindString}, ${3:[cReplaceWith]}, ${4:[nStart]}, ${5:[nOccurences]} )" },
      { "trigger": "strzero",           "contents": "StrZero( ${1:nNumber}, ${2:[nLength]}, ${3:[nDecimals]} )" },
      { "trigger": "stuff",             "contents": "Stuff( ${1:cString}, ${2:nStart}, ${3:nDelete}, ${4:cInsert} )" },
      { "trigger": "substr",            "contents": "SubStr( ${1:cString}, ${2:nStart}, ${3:[nCount]} )" },
/* T */
      { "trigger": "tbrowsedb",         "contents": "TBrowseDB( ${1:[nTop]}, ${2:[nLeft]}, ${3:[nBottom]}, ${4:[nRight]} )" },
      { "trigger": "tfileread",         "contents": "TFileRead()" },
      { "trigger": "time",              "contents": "Time()" },
      { "trigger": "timevalid",         "contents": "TimeValid( ${1:cTime} )" },
      { "trigger": "tone",              "contents": "Tone( ${1:nFrequency}, ${2:nDuration} )" },
      { "trigger": "transform",         "contents": "Transform( ${1:xExpression}, ${2:cSayPicture} )" },
      { "trigger": "trim",              "contents": "Trim( ${1:cString} )" },
      { "trigger": "type",              "contents": "Type( ${1:cExp} )" },
/* U */
      { "trigger": "u2bin",             "contents": "U2Bin( ${1:nNumber} )" },
      { "trigger": "updated",           "contents": "Updated()" },
      { "trigger": "upper",             "contents": "Upper( ${1:cString} )" },
      { "trigger": "used",              "contents": "Used()" },
/* V */
      { "trigger": "val",               "contents": "Val( ${1:cNumber} )" },
      { "trigger": "valtype",           "contents": "ValType( ${1:Exp} )" },
      { "trigger": "version",           "contents": "Version()" },
/* W */
      { "trigger": "__wait",            "contents": "__Wait( ${1:xPrompt} )" },
      { "trigger": "w2bin",             "contents": "W2Bin( ${1:nNumber} )" },
      { "trigger": "waitperiod",        "contents": "WaitPeriod( ${1:[nDelay]} )" },
      { "trigger": "wclose",            "contents": "WClose()" },
      { "trigger": "week",              "contents": "Week( ${1:[dDate]} )" },
      { "trigger": "wopen",             "contents": "WOpen( ${1:nTop}, ${2:nLeft}, ${3:nBottom}, ${4:nRight}, ${5:[lClear]} )" },
      { "trigger": "word",              "contents": "Word( ${1:nDouble} )" },
      { "trigger": "woy",               "contents": "WoY( ${1:dDate}, ${2:lIso} )" },
      { "trigger": "wselect",           "contents": "WSelect( ${1:nWindowID} )" },
      { "trigger": "wsetshadow",        "contents": "WSetShadow( ${1:[xNewColor]} )" },
/* X */
      { "trigger": "xtoc",              "contents": "XtoC( ${1:expValue} )" },
/* Y */
      { "trigger": "year",              "contents": "Year( ${1:dDate} )" },
/* Z */

/* ... */
      { "trigger": "not",               "contents": ".Not. " },
      { "trigger": "and",               "contents": ".And. " },
      { "trigger": "or",                "contents": ".Or. " },
      { "trigger": "t",                 "contents": ".T. " },
      { "trigger": "f",                 "contents": ".F. " },
   ]
}
